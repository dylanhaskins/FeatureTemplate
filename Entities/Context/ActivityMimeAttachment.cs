//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace CCMS.Entities {
    
    
    /// <summary>
    /// <para>MIME attachment for an activity.</para>
    /// <para>Display Name: Attachment</para>
    /// </summary>
    [EntityLogicalName("activitymimeattachment")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityMimeAttachment : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "activitymimeattachment";
        
        public const int EntityTypeCode = 1001;
        
        public ActivityMimeAttachment() : 
                base(EntityLogicalName) {
        }
        
        public ActivityMimeAttachment(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("filename");
            }
        }
        
        [AttributeLogicalName("activitymimeattachmentid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activitymimeattachmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the attachment.</para>
        /// <para>Display Name: Activity Mime Attachment</para>
        /// </summary>
        [AttributeLogicalName("activitymimeattachmentid")]
        public Guid? ActivityMimeAttachmentId {
            get {
                return GetAttributeValue<Guid?>("activitymimeattachmentid");
            }
            set {
                SetId("activitymimeattachmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity with which the attachment is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        public EntityReference ActivityId {
            get {
                return GetAttributeValue<EntityReference>("activityid");
            }
            set {
                SetAttributeValue("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("activitymimeattachmentidunique")]
        public Guid? ActivityMimeAttachmentIdUnique {
            get {
                return GetAttributeValue<Guid?>("activitymimeattachmentidunique");
            }
            set {
                SetAttributeValue("activitymimeattachmentidunique", value);
            }
        }
        
        /// <summary>
        /// <para>Descriptive subject for the activity.</para>
        /// <para>Display Name: ActivitySubject</para>
        /// </summary>
        [AttributeLogicalName("activitysubject")]
        public string ActivitySubject {
            get {
                return GetAttributeValue<string>("activitysubject");
            }
        }
        
        /// <summary>
        /// <para>anonymous link</para>
        /// <para>Display Name: For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("anonymouslink")]
        public string AnonymousLink {
            get {
                return GetAttributeValue<string>("anonymouslink");
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Content Id</para>
        /// </summary>
        [AttributeLogicalName("attachmentcontentid")]
        public string AttachmentContentId {
            get {
                return GetAttributeValue<string>("attachmentcontentid");
            }
            set {
                SetAttributeValue("attachmentcontentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the attachment with which this activitymimeattachment is associated.</para>
        /// <para>Display Name: Attachment</para>
        /// </summary>
        [AttributeLogicalName("attachmentid")]
        public EntityReference AttachmentId {
            get {
                return GetAttributeValue<EntityReference>("attachmentid");
            }
            set {
                SetAttributeValue("attachmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Number of the attachment.</para>
        /// <para>Display Name: Attachment Number</para>
        /// </summary>
        [AttributeLogicalName("attachmentnumber")]
        public int? AttachmentNumber {
            get {
                return GetAttributeValue<int?>("attachmentnumber");
            }
            set {
                SetAttributeValue("attachmentnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Contents of the attachment.</para>
        /// <para>Display Name: Body</para>
        /// </summary>
        [AttributeLogicalName("body")]
        public string Body {
            get {
                return GetAttributeValue<string>("body");
            }
            set {
                SetAttributeValue("body", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>File name of the attachment.</para>
        /// <para>Display Name: File Name</para>
        /// </summary>
        [AttributeLogicalName("filename")]
        public string FileName {
            get {
                return GetAttributeValue<string>("filename");
            }
            set {
                SetAttributeValue("filename", value);
            }
        }
        
        /// <summary>
        /// <para>File size of the attachment.</para>
        /// <para>Display Name: File Size (Bytes)</para>
        /// </summary>
        [AttributeLogicalName("filesize")]
        public int? FileSize {
            get {
                return GetAttributeValue<int?>("filesize");
            }
        }
        
        /// <summary>
        /// <para>Indicates if this attachment is followed.</para>
        /// <para>Display Name: Followed</para>
        /// </summary>
        [AttributeLogicalName("isfollowed")]
        public bool? IsFollowed {
            get {
                return GetAttributeValue<bool?>("isfollowed");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>MIME type of the attachment.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the record with which the attachment is associated</para>
        /// <para>Display Name: Item</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
            set {
                SetAttributeValue("objectid", value);
            }
        }
        
        /// <summary>
        /// <para>Object Type Code of the entity that is associated with the attachment.</para>
        /// <para>Display Name: Entity</para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        public string ObjectTypeCode {
            get {
                return GetAttributeValue<string>("objecttypecode");
            }
            set {
                SetAttributeValue("objecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity_mime_attachment.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity mime attachment.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the activity mime attachment.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Descriptive subject for the attachment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity mime attachment.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("email_activity_mime_attachment")]
        public Email email_activity_mime_attachment {
            get {
                return GetRelatedEntity<Email>("email_activity_mime_attachment", null);
            }
            set {
                SetRelatedEntity("email_activity_mime_attachment", null, value);
            }
        }
        
        public static ActivityMimeAttachment Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityMimeAttachment,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum ActivityMimeAttachment_ObjectTypeCode {
        
        [EnumMember()]
        EmailTemplate = 2010,
        
        [EnumMember()]
        EmailActivity = 4200,
    }
}
