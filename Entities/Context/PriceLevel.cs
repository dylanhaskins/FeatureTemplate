//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace CCMS.Entities {
    
    
    /// <summary>
    /// <para>Entity that defines pricing levels.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [EntityLogicalName("pricelevel")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class PriceLevel : ExtendedEntity<PriceLevelState, PriceLevel_StatusCode> {
        
        public const string EntityLogicalName = "pricelevel";
        
        public const int EntityTypeCode = 1022;
        
        public PriceLevel() : 
                base(EntityLogicalName) {
        }
        
        public PriceLevel(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("pricelevelid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the price list.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        public Guid? PriceLevelId {
            get {
                return GetAttributeValue<Guid?>("pricelevelid");
            }
            set {
                SetId("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Date on which the price list becomes effective.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("begindate")]
        public DateTime? BeginDate {
            get {
                return GetAttributeValue<DateTime?>("begindate");
            }
            set {
                SetAttributeValue("begindate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the price list.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the pricelevel.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the price list.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Date that is the last day the price list is valid.</para>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("enddate")]
        public DateTime? EndDate {
            get {
                return GetAttributeValue<DateTime?>("enddate");
            }
            set {
                SetAttributeValue("enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Freight terms for the price list.</para>
        /// <para>Display Name: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("freighttermscode")]
        public PriceLevel_FreightTermsCode? FreightTermsCode {
            get {
                return GetOptionSetValue<PriceLevel_FreightTermsCode>("freighttermscode");
            }
            set {
                SetOptionSetValue("freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the price list.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the pricelevel.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the price list.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Payment terms to use with the price list.</para>
        /// <para>Display Name: Payment Method </para>
        /// </summary>
        [AttributeLogicalName("paymentmethodcode")]
        public PriceLevel_PaymentMethodCode? PaymentMethodCode {
            get {
                return GetOptionSetValue<PriceLevel_PaymentMethodCode>("paymentmethodcode");
            }
            set {
                SetOptionSetValue("paymentmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for products in the price list.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        public PriceLevel_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<PriceLevel_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the price list.</para>
        /// <para>Display Name: Status </para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public PriceLevelState? StateCode {
            get {
                return GetOptionSetValue<PriceLevelState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the price list.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public PriceLevel_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<PriceLevel_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the price level.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_pricelevel_createdonbehalfby")]
        public SystemUser lk_pricelevel_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_pricelevel_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_pricelevel_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_pricelevel_modifiedonbehalfby")]
        public SystemUser lk_pricelevel_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_pricelevel_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_pricelevel_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_pricelevelbase_createdby")]
        public SystemUser lk_pricelevelbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_pricelevelbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_pricelevelbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_pricelevelbase_modifiedby")]
        public SystemUser lk_pricelevelbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_pricelevelbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_pricelevelbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("price_level_orders")]
        public IEnumerable<SalesOrder> price_level_orders {
            get {
                return GetRelatedEntities<SalesOrder>("price_level_orders", null);
            }
            set {
                SetRelatedEntities("price_level_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("price_level_products")]
        public IEnumerable<Product> price_level_products {
            get {
                return GetRelatedEntities<Product>("price_level_products", null);
            }
            set {
                SetRelatedEntities("price_level_products", null, value);
            }
        }
        
        public static PriceLevel Retrieve(IOrganizationService service, Guid id, params Expression<Func<PriceLevel,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum PriceLevelState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum PriceLevel_FreightTermsCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum PriceLevel_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum PriceLevel_PaymentMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum PriceLevel_StatusCode {
        
        [EnumMember()]
        Active = 100001,
        
        [EnumMember()]
        Inactive = 100002,
    }
}
