//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace CCMS.Entities {
    
    
    /// <summary>
    /// <para>Display Name: External configuration</para>
    /// </summary>
    [EntityLogicalName("dia_externalconfiguration")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dia_externalconfiguration : ExtendedEntity<dia_externalconfigurationState, dia_externalconfiguration_statuscode> {
        
        public const string EntityLogicalName = "dia_externalconfiguration";
        
        public const int EntityTypeCode = 10278;
        
        public dia_externalconfiguration() : 
                base(EntityLogicalName) {
        }
        
        public dia_externalconfiguration(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dia_name");
            }
        }
        
        [AttributeLogicalName("dia_externalconfigurationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dia_externalconfigurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: External configuration</para>
        /// </summary>
        [AttributeLogicalName("dia_externalconfigurationid")]
        public Guid? dia_externalconfigurationId {
            get {
                return GetAttributeValue<Guid?>("dia_externalconfigurationid");
            }
            set {
                SetId("dia_externalconfigurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Client ID</para>
        /// </summary>
        [AttributeLogicalName("dia_clientid")]
        public string dia_clientid {
            get {
                return GetAttributeValue<string>("dia_clientid");
            }
            set {
                SetAttributeValue("dia_clientid", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dia_name")]
        public string dia_name {
            get {
                return GetAttributeValue<string>("dia_name");
            }
            set {
                SetAttributeValue("dia_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Secret</para>
        /// </summary>
        [AttributeLogicalName("dia_secret")]
        public string dia_secret {
            get {
                return GetAttributeValue<string>("dia_secret");
            }
            set {
                SetAttributeValue("dia_secret", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Tenant ID</para>
        /// </summary>
        [AttributeLogicalName("dia_tenantid")]
        public string dia_tenantid {
            get {
                return GetAttributeValue<string>("dia_tenantid");
            }
            set {
                SetAttributeValue("dia_tenantid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Url</para>
        /// </summary>
        [AttributeLogicalName("dia_url")]
        public string dia_url {
            get {
                return GetAttributeValue<string>("dia_url");
            }
            set {
                SetAttributeValue("dia_url", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the External configuration</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dia_externalconfigurationState? statecode {
            get {
                return GetOptionSetValue<dia_externalconfigurationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the External configuration</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dia_externalconfiguration_statuscode? statuscode {
            get {
                return GetOptionSetValue<dia_externalconfiguration_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dia_externalconfiguration")]
        public BusinessUnit business_unit_dia_externalconfiguration {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dia_externalconfiguration", null);
            }
            set {
                SetRelatedEntity("business_unit_dia_externalconfiguration", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_externalconfiguration_dia_configuration_externalconfigurationid")]
        public IEnumerable<dia_configuration> dia_externalconfiguration_dia_configuration_externalconfigurationid {
            get {
                return GetRelatedEntities<dia_configuration>("dia_externalconfiguration_dia_configuration_externalconfigurationid", null);
            }
            set {
                SetRelatedEntities("dia_externalconfiguration_dia_configuration_externalconfigurationid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dia_externalconfiguration_createdby")]
        public SystemUser lk_dia_externalconfiguration_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_externalconfiguration_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dia_externalconfiguration_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dia_externalconfiguration_createdonbehalfby")]
        public SystemUser lk_dia_externalconfiguration_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_externalconfiguration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_externalconfiguration_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dia_externalconfiguration_modifiedby")]
        public SystemUser lk_dia_externalconfiguration_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_externalconfiguration_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dia_externalconfiguration_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dia_externalconfiguration_modifiedonbehalfby")]
        public SystemUser lk_dia_externalconfiguration_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_externalconfiguration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_externalconfiguration_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dia_externalconfiguration")]
        public Team team_dia_externalconfiguration {
            get {
                return GetRelatedEntity<Team>("team_dia_externalconfiguration", null);
            }
            set {
                SetRelatedEntity("team_dia_externalconfiguration", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dia_externalconfiguration")]
        public SystemUser user_dia_externalconfiguration {
            get {
                return GetRelatedEntity<SystemUser>("user_dia_externalconfiguration", null);
            }
            set {
                SetRelatedEntity("user_dia_externalconfiguration", null, value);
            }
        }
        
        public static dia_externalconfiguration Retrieve(IOrganizationService service, Guid id, params Expression<Func<dia_externalconfiguration,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum dia_externalconfigurationState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dia_externalconfiguration_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
}
